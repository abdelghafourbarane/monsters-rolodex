{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/card-list.component.jsx","components/searchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","titan","id","name","email","CardList","titans","map","SearchBox","placeholder","handlechange","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredTitans","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BACpB,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,YCDXC,G,MAAS,SAACR,GAAD,OAClB,qBAAKC,UAAU,YAAf,SACMD,EAAMS,OAAOC,KAAI,SAAAN,GAAK,OAChB,cAAC,EAAD,CAAsBA,MAAOA,GAAjBA,EAAMC,WCLrBM,G,MAAY,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aACnC,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCPG,E,kDAnCb,aAAc,IAAD,8BACX,gBAOFC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAPpC,EAAKC,MAAM,CACTd,OAAO,GACPW,YAAY,IAJH,E,qDAYb,WAAoB,IAAD,OACjBI,MAAM,8CACNC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACV,OAAOmB,S,oBAGpC,WAAS,IAAD,EACuBC,KAAKN,MAA3Bd,EADD,EACCA,OAAOW,EADR,EACQA,YACRU,EAAiBrB,EAAOsB,QAAO,SAAA3B,GAAK,OACxCA,EAAOE,KAAK0B,cAAcC,SAASb,EAAYY,kBACjD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAcgB,KAAKZ,eAErB,cAAC,EAAD,CAAUR,OAAQqB,W,GA9BPI,aCKJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92b9b970.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"./Card.styles.css\"\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt='titan' src={`https://robohash.org/${props.titan.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.titan.name}</h2>\r\n        <p>{props.titan.email}</p>\r\n    </div>\r\n)\r\n","import React from 'react';\r\n\r\nimport {Card} from \"../card/Card.component\";\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList=(props)=> (\r\n    <div className='card-list'>\r\n         {props.titans.map(titan => \r\n                <Card key= {titan.id} titan={titan}/>\r\n        )}\r\n    </div>\r\n)\r\n","import React from 'react';\r\n\r\nimport './searchBox.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handlechange})=>{\r\n    return(\r\n        <input \r\n            className='search'\r\n            type='search'\r\n            placeholder={placeholder}\r\n            onChange={handlechange}\r\n        />\r\n    );\r\n}\r\n","import React, { Component } from 'react'\n\nimport './App.css'\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/searchBox/searchBox.component'\n\n\nclass  App extends Component {\n  constructor(){\n    super();\n    this.state={\n      titans:[],\n      searchField:''\n    }\n  }\n\n  handleChange = e =>{\n    this.setState({searchField:e.target.value});\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').\n    then(response=>response.json()).\n    then(users=>this.setState({titans:users}))\n  }\n\n  render(){\n    const {titans,searchField} = this.state;\n    const filteredTitans = titans.filter(titan =>\n      titan .name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className='App'>\n        <h1>Monsters Roledex</h1>\n        <SearchBox\n          placeholder='search monster'\n          handlechange={this.handleChange}\n        />\n        <CardList titans={filteredTitans}/>\n      </div>\n    );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}